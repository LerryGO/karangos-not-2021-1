{"version":3,"sources":["img/karangos.png","ui/MainMenu.js","ui/TopBar.js","ui/FooterBar.js","ui/ConfirmDialog.js","routed/KarangosList2.js","routed/KarangosForm.js","routed/ClientesList.js","routed/ClientesForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuLink","color","palette","text","primary","textDecoration","MainMenu","classes","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","className","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","root","flexGrow","logo","width","TopBar","AppBar","position","Toolbar","src","logoImg","alt","secondary","toolbar","backgroundColor","background","paper","minHeight","bottom","link","light","FooterBar","Typography","variant","align","fontSize","href","ConfirmDialog","title","isOpen","children","result","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","table","minWidth","dataGrid","visibility","justifyContent","paddingRight","margin","KarangosList","karangos","setKarangos","deletable","setDeletable","dialogOpen","setDialogOpen","sbOpen","setSbOpen","sbSeverity","setSbSeverity","sbMessage","setSbMessage","history","useHistory","getData","a","axios","get","response","data","length","console","error","delete","message","handleSbClose","useEffect","setTimeout","columns","field","headerName","headerAlign","flex","disableColumnMenu","sortComparator","v1","v2","Number","renderCell","params","Checkbox","checked","value","readOnly","valueFormatter","toLocaleString","style","currency","push","deleteItem","Snackbar","autoHideDuration","elevation","severity","size","startIcon","Paper","rows","pageSize","autoHeight","disableSelectionOnClick","form","maxWidth","display","flexWrap","marginBottom","checkBox","alignItems","formatChars","KarangosForm","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","karango","setKarango","importadoChecked","setImportadoChecked","snackState","setSnackState","disabled","label","btnSendState","setBtnSendState","setError","isModified","setIsModified","setTitle","useParams","handleInputChange","property","karangoTemp","importadoCheckedTemp","target","newState","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","put","post","Alert","props","handleSnackClose","reason","onSubmit","preventDefault","saveData","TextField","onChange","fullWidth","required","helperText","select","i","years","map","year","type","onFocus","InputProps","startAdornment","InputAdornment","mask","FormControl","FormControlLabel","control","ClientesList","clientes","setClientes","telefoneMask","ClientesForm","nome","cpf","rg","logradouro","num_imovel","complemento","bairro","municipio","uf","telefone","email","cliente","setCliente","clienteTemp","miicipio","createMuiTheme","main","yellow","pink","box","default","paddingBottom","routed","padding","fontFamily","typography","Main","Box","path","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47bcf800.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/karangos.637f9a06.png\";","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  menuLink: {\r\n    color: theme.palette.text.primary,\r\n    textDecoration: 'none'\r\n  }\r\n}));\r\n\r\nexport default function MainMenu() {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>\r\n          <Link className={classes.menuLink} to=\"/list\">Listagem de karangos</Link>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          <Link className={classes.menuLink} to=\"/new\">Cadastrar novo karango</Link>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          <Link className={classes.menuLink} to=\"/listc\">Listagem de Clientes</Link>\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          <Link className={classes.menuLink} to=\"/newc\">Cadastrar novo Cliente</Link>\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport logoImg from '../img/karangos.png'\r\nimport MainMenu from './MainMenu'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  logo: {\r\n    width: '300px'\r\n  }\r\n}));\r\n\r\nexport default function TopBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <MainMenu />\r\n          <img src={logoImg} className={classes.logo} alt=\"Logotipo Karangos\" />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","//import Toolbar from '@material-ui/core/Toolbar'\r\nimport { Toolbar, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport LocalCafeTwoToneIcon from '@material-ui/icons/LocalCafeTwoTone'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    //backgroundColor: 'yellow',\r\n    width: '100%',\r\n    color: theme.palette.text.secondary\r\n  },\r\n  toolbar: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    minHeight: '42px',\r\n    // Posicionando a barra no rodapé da página\r\n    width: '100%',\r\n    position: 'fixed',\r\n    bottom: 0\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.light,\r\n    textDecoration: 'none',    // tira o sublinhado do link\r\n    '&:hover': {    // mouse passando sobre o link\r\n      textDecoration: 'underline' // retorna o sublinhado\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function FooterBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Toolbar className={classes.toolbar}>\r\n      <Typography variant=\"caption\" align=\"center\" className={classes.text}>\r\n        Desenvolvido com <LocalCafeTwoToneIcon fontSize=\"small\" /> por <a href=\"mailto:lerry.pirani@gmail.com\" className={classes.link}>Aluno: Lerry Augusto</a>\r\n      </Typography>\r\n    </Toolbar>\r\n  )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ConfirmDialog({title = 'Confirmar', isOpen = false, onClose, children}) {\r\n\r\n  const handleClose = (result) => {\r\n    // Só chama a função onClose se a prop correspondente tiver sido passada\r\n    if(onClose) onClose(result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={() => handleClose(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {children}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleClose(true)} color=\"primary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\r\n            Cancelar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { useHistory } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { DataGrid } from '@material-ui/data-grid'\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650,\n  },\n  dataGrid: {\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\n      visibility: 'hidden'\n    },\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\n      visibility: 'visible'\n    }\n  },\n  toolbar: {\n    justifyContent: 'flex-end',\n    paddingRight: 0,\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nexport default function KarangosList() {\n  const classes = useStyles()\n\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n  const [karangos, setKarangos] = useState([])\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n  const [sbOpen, setSbOpen] = useState(false)\n  const [sbSeverity, setSbSeverity] = useState('success')\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\n  \n  const history = useHistory()\n\n  useEffect(() => {\n    //Atrasa a busca dos dados em 100ms\n    setTimeout(() => getData(), 100)   \n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\n         // é executado apenas uma vez, no carregamento inicial do componente\n\n  async function getData() {\n    try { // tenta buscar os dados\n      let response = await axios.get('https://api.faustocintra.com.br/karangos?by=marca,modelo')\n      if(response.data.length > 0) setKarangos(response.data)\n    }\n    catch(error) {\n      console.error(error)\n    }\n  }\n\n  async function deleteItem() {\n    try {\n      await axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\n      getData()     // Atualiza os dados da tabela\n      setSbSeverity('success')\n      setSbMessage('Exclusão efetuada com sucesso.')\n    }\n    catch(error) {\n      setSbSeverity('error')\n      setSbMessage('ERRO: ' + error.message)\n    }\n    setSbOpen(true)   // Exibe a snackbar\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou com a exclusão \n    if(result) deleteItem()\n  }\n\n  function handleDelete(id) {\n    setDeletable(id)\n    setDialogOpen(true)\n  }\n\n  function handleSbClose() {\n    setSbOpen(false)    // Fecha a snackbar\n  }\n\n  const columns = [\n    { \n      field: 'id', \n      headerName: 'Cód.',\n      align: 'right',\n      headerAlign: 'right',  \n      flex: true,\n      disableColumnMenu: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    { \n      field: 'marca', \n      headerName: 'Marca',\n      flex: true \n    },\n    { \n      field: 'modelo', \n      headerName: 'Modelo',\n      flex: true \n    },\n    { \n      field: 'cor', \n      headerName: 'Cor',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true \n    },\n    { \n      field: 'ano_fabricacao', \n      headerName: 'Ano',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1 \n    },\n    { \n      field: 'importado', \n      headerName: 'Importado?',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      renderCell: params => (\n        <Checkbox checked={params.value === \"1\"} readOnly />\n      )\n    },\n    { \n      field: 'placa', \n      headerName: 'Placa',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true \n    },\n    { \n      field: 'preco', \n      headerName: 'Preço',\n      align: 'right', \n      headerAlign: 'right', \n      flex: true,\n      valueFormatter: params => (\n        Number(params.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })\n      ),\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    { \n      field: 'editar',\n      headerName: 'Editar',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit/${params.id}`)}>\n          <EditIcon />\n        </IconButton>\n      )\n    },\n    { \n      field: 'excluir',\n      headerName: 'Excluir',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\n          <DeleteIcon color=\"error\" />\n        </IconButton>\n      )\n    },\n  ];\n\n  return (\n    <>\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n        Deseja realmente excluir este karango?\n      </ConfirmDialog>\n      \n      <Snackbar open={sbOpen} autoHideDuration={6000} onClose={handleSbClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbSeverity}>\n          {sbMessage}\n        </MuiAlert>\n      </Snackbar>\n      \n      <h1>Listagem de Karangos</h1>\n      <Toolbar className={classes.toolbar}>\n        <Button color=\"secondary\" variant=\"contained\" size=\"large\" \n          startIcon={<AddBoxIcon />} onClick={() => history.push('/new')}>\n          Novo Karango\n        </Button>\n      </Toolbar>\n      <Paper elevation={4}>\n        <DataGrid className={classes.dataGrid} rows={karangos} columns={columns} pageSize={5} autoHeight={true} disableSelectionOnClick={true} />\n      </Paper>\n    </>\n  )\n}","import { useState, useEffect } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button, FormControl, Toolbar } from '@material-ui/core'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport InputMask from 'react-input-mask'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport axios from 'axios'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  form: {\r\n    maxWidth: '90%',\r\n    margin: '0 auto',\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    flexWrap: 'wrap',\r\n    '& .MuiFormControl-root': {\r\n      minWidth: '200px',\r\n      maxWidth: '500px',\r\n      marginBottom: '24px',\r\n    }\r\n  },\r\n  toolbar: {\r\n    margin: '36px',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-around'\r\n  },\r\n  checkBox: {\r\n    alignItems: 'center'\r\n  }\r\n}))\r\n\r\n/* Classes de caracteres de entrada para a máscara do campo placa\r\n1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\r\n2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\r\n3) 2ª posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\r\n*/\r\n\r\n// Representando as classes de caracteres da máscara como um objeto\r\nconst formatChars = {\r\n  'A': '[A-Za-z]',\r\n  '0': '[0-9]',\r\n  '#': '[0-9A-Ja-j]'\r\n}\r\n\r\n// Finalmente, a máscara de entrada do campo placa\r\nconst placaMask = 'AAA-0#00'\r\n\r\n// Máscara para CPF: '000.000.000-00'\r\n// Máscara para CNPJ: '00.000.000/0000-00'\r\n\r\nexport default function KarangosForm() {\r\n  const classes = useStyles()\r\n\r\n  const [karango, setKarango] = useState({\r\n    id: null,\r\n    marca: '',\r\n    modelo: '',\r\n    cor: '',\r\n    ano_fabricacao: (new Date()).getFullYear(), // Ano corrente\r\n    importado: '0',\r\n    placa: '',\r\n    preco: 0\r\n  })\r\n  const [currentId, setCurrentId] = useState()\r\n  const [importadoChecked, setImportadoChecked] = useState()\r\n\r\n  const [snackState, setSnackState] = useState({\r\n    open: false,\r\n    severity: 'success',\r\n    message: 'Karango salvo com sucesso!'\r\n  })\r\n\r\n  const [btnSendState, setBtnSendState] = useState({\r\n    disabled: false,\r\n    label: 'Enviar'\r\n  })\r\n\r\n  const [error, setError] = useState({\r\n    marca: '',\r\n    modelo: '',\r\n    cor: '',\r\n    placa: '',\r\n    preco: ''\r\n  })\r\n\r\n  const [isModified, setIsModified] = useState(false)\r\n\r\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n\r\n  const [title, setTitle] = useState('Cadastrar Novo Karango')\r\n\r\n  const history = useHistory()\r\n  const params = useParams()\r\n\r\n  useEffect(() => {\r\n    // Verifica se tem o parâmetro id na rota. Se tiver, temos que buscar\r\n    // os dados do registro no back-end para edição\r\n    if (params.id){\r\n      setTitle('Editando Karango')\r\n      getData(params.id)\r\n    } \r\n  }, [])\r\n\r\n  async function getData(id) {\r\n    try {\r\n      let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\r\n      setKarango(response.data)\r\n    }\r\n    catch (error) {\r\n      setSnackState({\r\n        open: true,\r\n        severity: 'error',\r\n        message: 'Não foi possível carregar os dados para edição.'\r\n      })\r\n    }\r\n  }\r\n\r\n  function handleInputChange(event, property) {\r\n\r\n    const karangoTemp = { ...karango }\r\n    let importadoCheckedTemp = importadoChecked\r\n\r\n    // Se houver id no event.target, ele será o nome da propriedade\r\n    // senão, usaremos o valor do segundo parâmetro\r\n    if (event.target.id) property = event.target.id\r\n\r\n    if (property === 'importado') {\r\n      const newState = !importadoChecked\r\n      //setKarango({ ...karango, importado: (newState ? '1' : '0') })\r\n      karangoTemp.importado = (newState ? '1' : '0')\r\n      //setImportadoChecked(newState)\r\n      importadoCheckedTemp = newState\r\n    }\r\n    else if (property === 'placa') {\r\n      //setKarango({ ...karango, [property]: event.target.value.toUpperCase() })\r\n      karangoTemp[property] = event.target.value.toUpperCase()\r\n    }\r\n    else {\r\n      // Quando o nome de uma propriedade de um objeto aparece entre [],\r\n      // isso se chama \"propriedade calculada\". O nome da propriedade vai\r\n      // corresponder à avaliação da expressão entre os colchetes\r\n      //setCurrentId(event.target.id)\r\n      //setKarango({ ...karango, [property]: event.target.value })\r\n      karangoTemp[property] = event.target.value\r\n    }\r\n    setKarango(karangoTemp)\r\n    setImportadoChecked(importadoCheckedTemp)\r\n    setIsModified(true) //o formulario foi modificado\r\n    validate(karangoTemp) // Dispara a validação\r\n  }\r\n\r\n  function validate(data) {\r\n\r\n    const errorTemp = {\r\n      marca: '',\r\n      modelo: '',\r\n      cor: '',\r\n      placa: '',\r\n      preco: ''\r\n    }\r\n    let isValid = true\r\n\r\n    // trim(): retira os espaços em branco do inicio e do final de uma string\r\n    // Validação do campo marca\r\n    if (data.marca.trim() === '') {\r\n      errorTemp.marca = 'A marca deve ser preenchida'\r\n      isValid = false\r\n    }\r\n\r\n    // Validação do campo modelo\r\n    if (data.modelo.trim() === '') {\r\n      errorTemp.modelo = 'O modelo deve ser preenchido'\r\n      isValid = false\r\n    }\r\n\r\n    // Validação do campo cor\r\n    if (data.cor.trim() === '') {\r\n      errorTemp.cor = 'Escolha uma cor'\r\n      isValid = false\r\n    }\r\n\r\n    // Validação do campo placa\r\n    // Valor válido não pode ser string vazia nem conter o caractere _\r\n    if (data.placa.trim() === '' || data.placa.includes('_')) {\r\n      errorTemp.placa = 'A placa deve ser corretamente preenchida'\r\n      isValid = false\r\n    }\r\n\r\n    // Validação do campo preco\r\n    // Valor válido deve ser numério e maior que zero\r\n    if (isNaN(data.preco) || Number(data.preco) <= 0) {\r\n      errorTemp.preco = 'O preço deve ser preenchido e maior que zero'\r\n      isValid = false\r\n    }\r\n    setError(errorTemp)\r\n    return isValid\r\n  }\r\n\r\n\r\n\r\n  function years() {\r\n    let result = []\r\n    for (let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\r\n    return result\r\n  }\r\n\r\n  async function saveData() {\r\n    try {\r\n      // Desabilitar o botão enviar\r\n      setBtnSendState({ disabled: true, label: 'Enviando...' })\r\n\r\n      // se o registro já existe (edição, verbo HTTP PUT)\r\n      if(params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\r\n      // Registro não existe, cria um novo (verbo HTTP POST)\r\n      else await axios.post('https://api.faustocintra.com.br/karangos', karango)\r\n\r\n      setSnackState({\r\n        open: true,\r\n        severity: 'success',\r\n        message: 'Karango salvo com sucesso!'\r\n      })\r\n\r\n    }\r\n    catch (error) {\r\n      setSnackState({\r\n        open: true,\r\n        severity: 'error',\r\n        message: 'ERRO: ' + error.message\r\n      })\r\n    }\r\n    // Reabilitar o botão enviar\r\n    setBtnSendState({ disabled: false, label: 'Enviar' })\r\n  }\r\n  function handleSubmit(event) {\r\n\r\n    event.preventDefault() // Evitar o recarregamento da página\r\n\r\n    // Só salva os dados se eles forem válidos\r\n    if (validate(karango)) saveData()\r\n  }\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  function handleSnackClose(event, reason) {\r\n    // Evita que a snackbar seja fechada clicando-se fora dela\r\n    if (reason === 'clickaway') return\r\n    setSnackState({ ...snackState, open: false }) // Fecha a snackbar\r\n    // Retorna à página de listagem\r\n    history.push('/list') // Retorna à página de listagem\r\n  }\r\n\r\n  function handleDialogClose(result) {\r\n    setDialogOpen(false)\r\n\r\n    // Se o usuário concordou com a exclusão \r\n    if (result) history.push('/list')\r\n  }\r\n\r\n  function handleGoBack() {\r\n\r\n    // Se o formulário estiver modificado, mostramos o diálogo de confirmação\r\n    if (isModified) setDialogOpen(true)\r\n    //senão, voltamos diretamente à página de listagem\r\n    else history.push('/list')\r\n  }\r\n  return (\r\n    <>\r\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\r\n        Há dados não salvos. Deseja realmente voltar?\r\n      </ConfirmDialog>\r\n\r\n      <Snackbar open={snackState.open} autoHideDuration={4000} onClose={handleSnackClose}>\r\n        <Alert onClose={handleSnackClose} severity={snackState.severity}>\r\n          {snackState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <h1>{title}</h1>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n\r\n        <TextField\r\n          id=\"marca\"\r\n          label=\"Marca\"\r\n          variant=\"filled\"\r\n          value={karango.marca}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n          required\r\n          error={error.marca !== ''}\r\n          helperText={error.marca}\r\n        />\r\n\r\n        <TextField\r\n          id=\"modelo\"\r\n          label=\"Modelo\"\r\n          variant=\"filled\"\r\n          value={karango.modelo}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n          required\r\n          error={error.modelo !== ''}\r\n          helperText={error.modelo}\r\n        />\r\n\r\n        <TextField\r\n          id=\"cor\"\r\n          label=\"Cor\"\r\n          variant=\"filled\"\r\n          value={karango.cor}\r\n          onChange={event => handleInputChange(event, 'cor')}\r\n          fullWidth\r\n          select\r\n          required\r\n          error={error.cor !== ''}\r\n          helperText={error.cor}\r\n        >\r\n          <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\r\n          <MenuItem value=\"Azul\">Azul</MenuItem>\r\n          <MenuItem value=\"Bege\">Bege</MenuItem>\r\n          <MenuItem value=\"Branco\">Branco</MenuItem>\r\n          <MenuItem value=\"Cinza\">Cinza</MenuItem>\r\n          <MenuItem value=\"Dourado\">Dourado</MenuItem>\r\n          <MenuItem value=\"Laranja\">Laranja</MenuItem>\r\n          <MenuItem value=\"Marrom\">Marrom</MenuItem>\r\n          <MenuItem value=\"Prata\">Prata</MenuItem>\r\n          <MenuItem value=\"Preto\">Preto</MenuItem>\r\n          <MenuItem value=\"Roxo\">Roxo</MenuItem>\r\n          <MenuItem value=\"Verde\">Verde</MenuItem>\r\n          <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\r\n        </TextField>\r\n\r\n        <TextField id=\"ano_fabricacao\" label=\"Ano de Fabricacao\" variant=\"filled\" value={karango.ano_fabricacao} onChange={event => handleInputChange(event, 'ano_fabricacao')} fullWidth select>\r\n          {years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\r\n        </TextField>\r\n\r\n        <TextField\r\n          id=\"preco\"\r\n          label=\"Preço\"\r\n          variant=\"filled\"\r\n          value={karango.preco}\r\n          onChange={handleInputChange}\r\n          fullWidth\r\n          type=\"number\"\r\n          onFocus={event => event.target.select()}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\r\n          }}\r\n          required\r\n          error={error.preco !== ''}\r\n          helperText={error.preco}\r\n        />\r\n\r\n        <InputMask\r\n          formatChars={formatChars}\r\n          mask={placaMask}\r\n          id=\"placa\"\r\n          onChange={event => handleInputChange(event, 'placa')}\r\n          value={karango.placa}\r\n        >\r\n          {() => <TextField\r\n            label=\"Placa\"\r\n            variant=\"filled\"\r\n            fullWidth\r\n            required\r\n            error={error.placa !== ''}\r\n            helperText={error.placa}\r\n          />}\r\n        </InputMask>\r\n\r\n        <FormControl className={classes.checkBox} fullWidth>\r\n          <FormControlLabel\r\n            control={<Checkbox checked={importadoChecked} onChange={handleInputChange} id=\"importado\" />}\r\n            label=\"Importado?\"\r\n          />\r\n        </FormControl>\r\n\r\n        <Toolbar className={classes.toolbar}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            type=\"submit\"\r\n            disabled={btnSendState.disabled}\r\n          >\r\n            {btnSendState.label}</Button>\r\n          <Button variant=\"contained\" onClick={handleGoBack}>\r\n            Voltar\r\n            </Button>\r\n        </Toolbar>\r\n\r\n        {/*<div>{JSON.stringify(karango)}<br />currentId: {currentId}</div>*/}\r\n      </form>\r\n    </>\r\n  )\r\n}","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { useHistory } from 'react-router-dom'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { DataGrid } from '@material-ui/data-grid'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  dataGrid: {\r\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\r\n      visibility: 'hidden'\r\n    },\r\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\r\n      visibility: 'visible'\r\n    }\r\n  },\r\n  toolbar: {\r\n    justifyContent: 'flex-end',\r\n    paddingRight: 0,\r\n    margin: theme.spacing(2, 0)\r\n  }\r\n}));\r\n\r\nexport default function ClientesList() {\r\n  const classes = useStyles()\r\n\r\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\r\n  const [clientes, setClientes] = useState([])\r\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\r\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n  const [sbOpen, setSbOpen] = useState(false)\r\n  const [sbSeverity, setSbSeverity] = useState('success')\r\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\r\n  \r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    //Atrasa a busca dos dados em 100ms\r\n    setTimeout(() => getData(), 100)   \r\n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\r\n         // é executado apenas uma vez, no carregamento inicial do componente\r\n\r\n  async function getData() {\r\n    try { // tenta buscar os dados\r\n      let response = await axios.get('https://api.faustocintra.com.br/clientes')\r\n      if(response.data.length > 0) setClientes(response.data)\r\n    }\r\n    catch(error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  async function deleteItem() {\r\n    try {\r\n      await axios.delete(`https://api.faustocintra.com.br/clientes/${deletable}`)\r\n      getData()     // Atualiza os dados da tabela\r\n      setSbSeverity('success')\r\n      setSbMessage('Exclusão efetuada com sucesso.')\r\n    }\r\n    catch(error) {\r\n      setSbSeverity('error')\r\n      setSbMessage('ERRO: ' + error.message)\r\n    }\r\n    setSbOpen(true)   // Exibe a snackbar\r\n  }\r\n\r\n  function handleDialogClose(result) {\r\n    setDialogOpen(false)\r\n\r\n    // Se o usuário concordou com a exclusão \r\n    if(result) deleteItem()\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    setDeletable(id)\r\n    setDialogOpen(true)\r\n  }\r\n\r\n  function handleSbClose() {\r\n    setSbOpen(false)    // Fecha a snackbar\r\n  }\r\n\r\n  const columns = [\r\n    { \r\n      field: 'id', \r\n      headerName: 'Cód.',\r\n      align: 'right',\r\n      headerAlign: 'right',  \r\n      flex: true,\r\n      disableColumnMenu: true,\r\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n    },\r\n    { \r\n      field: 'nome', \r\n      headerName: 'nome',\r\n      flex: true \r\n    },\r\n    { \r\n      field: 'cpf', \r\n      headerName: 'cpf',\r\n      flex: true \r\n    },\r\n    { \r\n      field: 'rg', \r\n      headerName: 'rg',\r\n      align: 'center',\r\n      headerAlign: 'center', \r\n      flex: true \r\n    },\r\n    \r\n    { \r\n      field: 'logradouro', \r\n      headerName: 'Logradouro',\r\n      align: 'center', \r\n      headerAlign: 'center', \r\n      flex: true \r\n    },\r\n    { \r\n      field: 'editar',\r\n      headerName: 'Editar',\r\n      align: 'center', \r\n      headerAlign: 'center', \r\n      flex: true,\r\n      renderCell: params => (\r\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/editc/${params.id}`)}>\r\n          <EditIcon />\r\n        </IconButton>\r\n      )\r\n    },\r\n    { \r\n      field: 'excluir',\r\n      headerName: 'Excluir',\r\n      align: 'center', \r\n      headerAlign: 'center', \r\n      flex: true,\r\n      renderCell: params => (\r\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\r\n          <DeleteIcon color=\"error\" />\r\n        </IconButton>\r\n      )\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\r\n        Deseja realmente excluir este Cliente?\r\n      </ConfirmDialog>\r\n      \r\n      <Snackbar open={sbOpen} autoHideDuration={6000} onClose={handleSbClose}>\r\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbSeverity}>\r\n          {sbMessage}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      \r\n      <h1>Listagem de Clientes</h1>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Button color=\"secondary\" variant=\"contained\" size=\"large\" \r\n          startIcon={<AddBoxIcon />} onClick={() => history.push('/newc')}>\r\n          Novo Cliente\r\n        </Button>\r\n      </Toolbar>\r\n      <Paper elevation={4}>\r\n        <DataGrid className={classes.dataGrid} rows={clientes} columns={columns} pageSize={5} autoHeight={true} disableSelectionOnClick={true} />\r\n      </Paper>\r\n    </>\r\n  )\r\n}","import { useState, useEffect } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button, FormControl, Toolbar } from '@material-ui/core'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport InputMask from 'react-input-mask'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport axios from 'axios'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    form: {\r\n        maxWidth: '90%',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        flexWrap: 'wrap',\r\n        '& .MuiFormControl-root': {\r\n            minWidth: '200px',\r\n            maxWidth: '500px',\r\n            marginBottom: '24px',\r\n        }\r\n    },\r\n    toolbar: {\r\n        margin: '36px',\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    },\r\n    checkBox: {\r\n        alignItems: 'center'\r\n    }\r\n}))\r\n\r\n/* Classes de caracteres de entrada para a máscara do campo placa\r\n1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\r\n2) Posições numéricas (1ª, a 3ª e a 4ª depois do traço) ~> [0-9]\r\n3) 2ª posição após o traço: pode receber dígitos ou letras de A a J (maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\r\n*/\r\n\r\n// Representando as classes de caracteres da máscara como um objeto\r\nconst formatChars = {\r\n    'A': '[A-Za-z]',\r\n    '0': '[0-9]',\r\n    '#': '[0-9A-Ja-j]'\r\n}\r\n\r\n// Finalmente, a máscara de entrada do campo placa\r\nconst cpfMask = '000.000.000-00'\r\nconst rgMask = '00.000.000-0'\r\nconst telefoneMask = '(00)00000-0000'\r\n\r\n// Máscara para CPF: '000.000.000-00'\r\n// Máscara para CNPJ: '00.000.000/0000-00'\r\n\r\nexport default function ClientesForm() {\r\n    const classes = useStyles()\r\n\r\n    const [cliente, setCliente] = useState({\r\n        id: null,\r\n        nome: '',\r\n        cpf: '',\r\n        rg: '',\r\n        logradouro: '',\r\n        num_imovel: '',\r\n        complemento: '',\r\n        bairro: '',\r\n        municipio: '',\r\n        uf: '',\r\n        telefone: '',\r\n        email: ''\r\n    })\r\n\r\n\r\n    const [snackState, setSnackState] = useState({\r\n        open: false,\r\n        severity: 'success',\r\n        message: 'Cliente salvo com sucesso!'\r\n    })\r\n\r\n    const [btnSendState, setBtnSendState] = useState({\r\n        disabled: false,\r\n        label: 'Enviar'\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        nome: '',\r\n        cpf: '',\r\n        rg: '',\r\n        logradouro: '',\r\n        num_imovel: '',\r\n        bairro: '',\r\n        municipio: '',\r\n        uf: '',\r\n        telefone: '',\r\n        email: ''\r\n    })\r\n\r\n    const [isModified, setIsModified] = useState(false)\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n\r\n    const [title, setTitle] = useState('Cadastrar Novo Cliente')\r\n\r\n    const history = useHistory()\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n        // Verifica se tem o parâmetro id na rota. Se tiver, temos que buscar\r\n        // os dados do registro no back-end para edição\r\n        if (params.id) {\r\n            setTitle('Editando Cliente')\r\n            getData(params.id)\r\n        }\r\n    }, [])\r\n\r\n    async function getData(id) {\r\n        try {\r\n            let response = await axios.get(`https://api.faustocintra.com.br/clientes/${id}`)\r\n            setCliente(response.data)\r\n        }\r\n        catch (error) {\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'error',\r\n                message: 'Não foi possível carregar os dados para edição.'\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleInputChange(event, property) {\r\n\r\n        const clienteTemp = { ...cliente }\r\n\r\n\r\n        // Se houver id no event.target, ele será o nome da propriedade\r\n        // senão, usaremos o valor do segundo parâmetro\r\n        if (event.target.id) property = event.target.id\r\n\r\n        clienteTemp[property] = event.target.value\r\n\r\n        setCliente(clienteTemp)\r\n        setIsModified(true) //o formulario foi modificado\r\n        validate(clienteTemp) // Dispara a validação\r\n    }\r\n\r\n    function validate(data) {\r\n\r\n        const errorTemp = {\r\n            nome: '',\r\n            cpf: '',\r\n            rg: '',\r\n            logradouro: '',\r\n            num_imovel: '',\r\n            bairro: '',\r\n            municipio: '',\r\n            uf: '',\r\n            telefone: '',\r\n            email: ''\r\n        }\r\n        let isValid = true\r\n\r\n        // trim(): retira os espaços em branco do inicio e do final de uma string\r\n        // Validação do campo marca\r\n        if (data.nome.trim() === '') {\r\n            errorTemp.nome = 'O nome deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        // Valor válido não pode ser string vazia nem conter o caractere _\r\n        if (data.cpf.trim() === '' || data.cpf.includes('_')) {\r\n            errorTemp.cpf = 'O CPF deve ser corretamente preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        // Valor válido não pode ser string vazia nem conter o caractere _\r\n        if (data.rg.trim() === '' || data.rg.includes('_')) {\r\n            errorTemp.rg = 'O RG deve ser corretamente preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        // Validação do campo logradouro\r\n        if (data.logradouro.trim() === '') {\r\n            errorTemp.logradouro = 'O campo logradouro deve ser corretamente preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        if (data.num_imovel.trim() === '') {\r\n            errorTemp.num_imovel = 'O número do imóvel deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        if (data.bairro.trim() === '') {\r\n            errorTemp.bairro = 'O bairro deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        if (data.municipio.trim() === '') {\r\n            errorTemp.municipio = 'O municipio deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        if (data.uf.trim() === '') {\r\n            errorTemp.uf = 'O UF deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        // Valor válido não pode ser string vazia nem conter o caractere _\r\n        if (data.telefone.trim() === '' || data.telefone.includes('_')) {\r\n            errorTemp.telefone = 'O telefone deve ser corretamente preenchido'\r\n            isValid = false\r\n        }\r\n\r\n        if (data.email.trim() === '') {\r\n            errorTemp.email = 'O Email deve ser preenchido'\r\n            isValid = false\r\n        }\r\n\r\n\r\n        setError(errorTemp)\r\n        return isValid\r\n    }\r\n\r\n\r\n    async function saveData() {\r\n        try {\r\n            // Desabilitar o botão enviar\r\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\r\n\r\n            // se o registro já existe (edição, verbo HTTP PUT)\r\n            if (params.id) await axios.put(`https://api.faustocintra.com.br/clientes/${params.id}`, cliente)\r\n            // Registro não existe, cria um novo (verbo HTTP POST)\r\n            else await axios.post('https://api.faustocintra.com.br/clientes', cliente)\r\n\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'success',\r\n                message: 'Cliente salvo com sucesso!'\r\n            })\r\n\r\n        }\r\n        catch (error) {\r\n            setSnackState({\r\n                open: true,\r\n                severity: 'error',\r\n                message: 'ERRO: ' + error.message\r\n            })\r\n        }\r\n        // Reabilitar o botão enviar\r\n        setBtnSendState({ disabled: false, label: 'Enviar' })\r\n    }\r\n    function handleSubmit(event) {\r\n\r\n        event.preventDefault() // Evitar o recarregamento da página\r\n\r\n        // Só salva os dados se eles forem válidos\r\n        if (validate(cliente)) saveData()\r\n    }\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    function handleSnackClose(event, reason) {\r\n        // Evita que a snackbar seja fechada clicando-se fora dela\r\n        if (reason === 'clickaway') return\r\n        setSnackState({ ...snackState, open: false }) // Fecha a snackbar\r\n        // Retorna à página de listagem\r\n        history.push('/listc') // Retorna à página de listagem\r\n    }\r\n\r\n    function handleDialogClose(result) {\r\n        setDialogOpen(false)\r\n\r\n        // Se o usuário concordou com a exclusão \r\n        if (result) history.push('/listc')\r\n    }\r\n\r\n    function handleGoBack() {\r\n\r\n        // Se o formulário estiver modificado, mostramos o diálogo de confirmação\r\n        if (isModified) setDialogOpen(true)\r\n        //senão, voltamos diretamente à página de listagem\r\n        else history.push('/listc')\r\n    }\r\n    return (\r\n        <>\r\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\r\n                Há dados não salvos. Deseja realmente voltar?\r\n      </ConfirmDialog>\r\n\r\n            <Snackbar open={snackState.open} autoHideDuration={4000} onClose={handleSnackClose}>\r\n                <Alert onClose={handleSnackClose} severity={snackState.severity}>\r\n                    {snackState.message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <h1>{title}</h1>\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n\r\n                <TextField\r\n                    id=\"nome\"\r\n                    label=\"Nome\"\r\n                    variant=\"filled\"\r\n                    value={cliente.nome}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.nome !== ''}\r\n                    helperText={error.nome} />\r\n\r\n                <InputMask\r\n                    formatChars={formatChars}\r\n                    mask={cpfMask}\r\n                    id=\"cpf\"\r\n                    onChange={event => handleInputChange(event, 'cpf')}\r\n                    value={cliente.cpf}\r\n                >\r\n                    {() => <TextField\r\n                        label=\"CPF\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={error.cpf !== ''}\r\n                        helperText={error.cpf}\r\n                    />}\r\n                </InputMask>\r\n\r\n                <InputMask\r\n                    formatChars={formatChars}\r\n                    mask={rgMask}\r\n                    fullWidth\r\n                    id=\"rg\"\r\n                    onChange={event => handleInputChange(event, 'rg')}\r\n                    value={cliente.rg}\r\n                >\r\n                    {() => <TextField\r\n                        label=\"RG\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={error.rg !== ''}\r\n                        helperText={error.rg}\r\n                    />}\r\n                </InputMask>\r\n\r\n                <TextField\r\n                    id=\"logradouro\"\r\n                    label=\"Logradouro\"\r\n                    variant=\"filled\"\r\n                    value={cliente.logradouro}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.logradouro !== ''}\r\n                    helperText={error.logradouro}\r\n                />\r\n\r\n                <TextField\r\n                    id=\"num_imovel\"\r\n                    label=\"Número imovel\"\r\n                    variant=\"filled\"\r\n                    value={cliente.num_imovel}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.num_imovel !== ''}\r\n                    helperText={error.num_imovel}\r\n                />\r\n\r\n                <TextField\r\n                    id=\"complemento\"\r\n                    label=\"Complemento\"\r\n                    variant=\"filled\"\r\n                    value={cliente.complemento}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                />\r\n\r\n                <TextField\r\n                    id=\"bairro\"\r\n                    label=\"Bairro\"\r\n                    variant=\"filled\"\r\n                    value={cliente.bairro}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.bairro !== ''}\r\n                    helperText={error.bairro}\r\n                />\r\n\r\n                <TextField\r\n                    id=\"municipio\"\r\n                    label=\"Municipio\"\r\n                    variant=\"filled\"\r\n                    value={cliente.municipio}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.municipio !== ''}\r\n                    helperText={error.miicipio}\r\n                />\r\n\r\n                <TextField\r\n                    id=\"uf\"\r\n                    label=\"Estado\"\r\n                    variant=\"filled\"\r\n                    value={cliente.uf}\r\n                    onChange={event => handleInputChange(event, 'uf')}\r\n                    select\r\n                    fullWidth\r\n                    required\r\n                    error={error.uf !== ''}\r\n                    helperText={error.uf}\r\n                >\r\n                    <MenuItem value=\"AC\">Acre</MenuItem>\r\n                    <MenuItem value=\"AL\">Alagoas</MenuItem>\r\n                    <MenuItem value=\"AP\">Amapá</MenuItem>\r\n                    <MenuItem value=\"AM\">Amazonas</MenuItem>\r\n                    <MenuItem value=\"BA\">Bahia</MenuItem>\r\n                    <MenuItem value=\"CE\">Ceará</MenuItem>\r\n                    <MenuItem value=\"DF\">Distrito Federal</MenuItem>\r\n                    <MenuItem value=\"ES\">Espírito Santo</MenuItem>\r\n                    <MenuItem value=\"GO\">Goiás</MenuItem>\r\n                    <MenuItem value=\"MA\">Maranhão</MenuItem>\r\n                    <MenuItem value=\"MT\">Mato Grosso</MenuItem>\r\n                    <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\r\n                    <MenuItem value=\"MG\">Minas Gerais</MenuItem>\r\n                    <MenuItem value=\"PA\">Pará</MenuItem>\r\n                    <MenuItem value=\"PB\">Paraíba</MenuItem>\r\n                    <MenuItem value=\"PR\">Paraná</MenuItem>\r\n                    <MenuItem value=\"PE\">Pernambuco</MenuItem>\r\n                    <MenuItem value=\"PI\">Piauí</MenuItem>\r\n                    <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\r\n                    <MenuItem value=\"RN\">Rio Grande do Norte</MenuItem>\r\n                    <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\r\n                    <MenuItem value=\"RO\">Rondônia</MenuItem>\r\n                    <MenuItem value=\"RR\">Roraima</MenuItem>\r\n                    <MenuItem value=\"SC\">Santa Catarina</MenuItem>\r\n                    <MenuItem value=\"SP\">São Paulo</MenuItem>\r\n                    <MenuItem value=\"SE\">Sergipe</MenuItem>\r\n                    <MenuItem value=\"TO\">Tocantins</MenuItem>\r\n                </TextField>\r\n\r\n                <InputMask\r\n                    formatChars={formatChars}\r\n                    mask={telefoneMask}\r\n                    fullWidth\r\n                    id=\"telefone\"\r\n                    onChange={event => handleInputChange(event, 'telefone')}\r\n                    value={cliente.telefone}\r\n                >\r\n                    {() => <TextField\r\n                        formatChars={formatChars}\r\n                        mask={telefoneMask}\r\n                        label=\"Telefone\"\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        required\r\n                        error={error.telefone !== ''}\r\n                        helperText={error.telefone}\r\n                    />}\r\n                </InputMask>\r\n\r\n                <TextField\r\n                    id=\"email\"\r\n                    label=\"E-mail\"\r\n                    type='email'\r\n                    variant=\"filled\"\r\n                    value={cliente.email}\r\n                    onChange={handleInputChange}\r\n                    fullWidth\r\n                    required\r\n                    error={error.email !== ''}\r\n                    helperText={error.email}\r\n                />\r\n\r\n\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        type=\"submit\"\r\n                        disabled={btnSendState.disabled}\r\n                    >\r\n                        {btnSendState.label}</Button>\r\n                    <Button variant=\"contained\" onClick={handleGoBack}>\r\n                        Voltar\r\n            </Button>\r\n                </Toolbar>\r\n\r\n                {/*<div>{JSON.stringify(karango)}<br />currentId: {currentId}</div>*/}\r\n            </form>\r\n        </>\r\n    )\r\n}","/*\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Button from '@material-ui/core/Button'\r\n<div className=\"App\">\r\n      <header className=\"App-header\">\r\n          <h1>Projeto Karangos</h1>\r\n          <Button variant=\"contained\">Clique aqui</Button>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n  </div>*/\r\n\r\n  import TopBar from './ui/TopBar';\r\n  import FooterBar from './ui/FooterBar'\r\n  import { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\r\n  import yellow from '@material-ui/core/colors/yellow';\r\n  import pink from '@material-ui/core/colors/pink';\r\n  import { Box } from '@material-ui/core';\r\n  import { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n  import KarangosList from './routed/KarangosList2'\r\n  import KarangosForm from './routed/KarangosForm'\r\n  import ClientesList from './routed/ClientesList'\r\n  import ClientesForm from './routed/ClientesForm'\r\n  \r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: 'dark',\r\n      primary: {\r\n        main: yellow[500],\r\n      },\r\n      secondary: {\r\n        main: pink[500],\r\n      },\r\n    },\r\n  });\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    box: {\r\n      backgroundColor: theme.palette.background.default,\r\n      minHeight: '100vh',     //100% da altura da área visível\r\n      paddingBottom: '42px'   //Para que o conteúdo não fique escondido atrás do footer\r\n    },\r\n    routed: {\r\n      padding: '25px',\r\n      color: theme.palette.text.primary,\r\n      fontFamily: theme.typography.fontFamily\r\n    }\r\n  \r\n  }));\r\n  \r\n  function Main() {\r\n    const classes = useStyles();\r\n    return (\r\n      <Box className={classes.box}>\r\n        <BrowserRouter>\r\n          <TopBar />\r\n          <Box id=\"routed\" className={classes.routed}>\r\n            <Switch>\r\n              <Route path=\"/list\">\r\n                <KarangosList />\r\n              </Route>\r\n              <Route path=\"/new\">\r\n                <KarangosForm />\r\n              </Route>\r\n              {/* : id é um parâmetro (nomes de parâmetros começam com dois pontos)*/}\r\n              <Route path=\"/edit/:id\">\r\n                <KarangosForm/>\r\n              </Route>\r\n              {/* : id é um parâmetro (nomes de parâmetros começam com dois pontos)*/}\r\n              <Route path=\"/editc/:id\">\r\n                <ClientesForm />\r\n              </Route>\r\n              <Route path=\"/listc\">\r\n                <ClientesList />\r\n              </Route>\r\n              <Route path=\"/newc\">\r\n                <ClientesForm />\r\n              </Route>\r\n            </Switch>\r\n          </Box>\r\n          <FooterBar />\r\n        </BrowserRouter>\r\n      </Box>\r\n    )\r\n  }\r\n  \r\n  function App() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Main />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n  \r\n  export default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}